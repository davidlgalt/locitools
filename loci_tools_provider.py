# -*- coding: utf-8 -*-

"""
/***************************************************************************
 LociTools
                                 A QGIS plugin
 Various tools created by LociGeo.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2019-08-26
        copyright            : (C) 2019 by LociGeo
        email                : davidlgalt.gis@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = 'LociGeo'
__date__ = '2019-08-26'
__copyright__ = '(C) 2019 by LociGeo'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

import os
from qgis.PyQt.QtGui import QIcon
from qgis.PyQt.QtCore import QCoreApplication
from qgis.PyQt.QtWidgets import QAction, QMessageBox
from qgis.core import (
    QgsProcessingProvider, 
    QgsApplication, 
    QgsProcessingAlgorithm,
    QgsProcessingModelAlgorithm,
    QgsProcessingParameterMapLayer
)
from processing.core.ProcessingConfig import ProcessingConfig, Setting


from qgis.core import QgsProcessingProvider
from .add_quantile_attributes_algorithm import AddQuantileAttributesAlgorithm
#from .search_and_merge_algorithm import SearchAndMergeAlgorithm
#from .lock_layers_algorithm import LockLayersAlgorithm
from .export_pdf_algorithm import ExportPdfAlgorithm
#from .change_layer_source_path import ChangeLayerSourcePathAlgorithm
from .export_raster_algorithm import ExportRasterAlgorithm
from .add_delay_algorythm import AddDelayAlgorithm
#from .delete_raster_from_gpkg import DeleteRasterFromGeopackageAlgorithm





class LociToolsProvider(QgsProcessingProvider):

    def __init__(self):
        """
        Default constructor.
        """
        QgsProcessingProvider.__init__(self)

    def unload(self):
        """
        Unloads the provider. Any tear-down steps required by the provider
        should be implemented here.
        """
        pass

    def loadAlgorithms(self):
        """
        Loads all algorithms belonging to this provider.
        """
        self.addAlgorithm(AddQuantileAttributesAlgorithm())
        #self.addAlgorithm(SearchAndMergeAlgorithm())
        #self.addAlgorithm(LockLayersAlgorithm())
        self.addAlgorithm(ExportPdfAlgorithm())
        #self.addAlgorithm(ChangeLayerSourcePathAlgorithm())
        self.addAlgorithm(ExportRasterAlgorithm())
        self.addAlgorithm(AddDelayAlgorithm())
        #self.addAlgorithm(DeleteRasterFromGeopackageAlgorithm())

        #self.addAlgorithm(NtkGeocoderAlgorithm())

        ''' load all graphical models (*.model3) in plug-in dir '''
        for dirpath, dirnames, files in os.walk(os.path.dirname(__file__)):
            for file_name in files:
                if file_name.lower().endswith('.model3'):
                    alg = QgsProcessingModelAlgorithm()
                    alg.fromFile(os.path.join(dirpath, file_name))
                    alg.setGroup('Models')
                    self.addAlgorithm(alg)

    def id(self):
        return 'loci'

    def name(self):
        return self.tr('LociTools')

    def icon(self):
        return QgsProcessingProvider.icon(self)

    def longName(self):
        return self.name()
